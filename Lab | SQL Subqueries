-- How many copies of the film Hunchback Impossible exist in the inventory system?


SELECT count(inventory_id), film_id FROM sakila.inventory
where film_id in  (
SELECT film_id FROM sakila.film
where title = 'Hunchback Impossible')
group  by 2;

-- List all films whose length is longer than the average of all the films.

select * from sakila.film
where length > (SELECT (select sum(length) from sakila.film) /count(distinct film_id) as  avg_film_duration FROM sakila.film);

-- Use subqueries to display all actors who appear in the film Alone Trip.

select * from sakila.actor
where actor_id in (select actor_id from sakila.film_actor
where film_id = (SELECT film_id FROM sakila.film
where title = 'Alone Trip'));

-- Sales have been lagging among young families, and you wish to target all family movies for a promotion. Identify all movies categorized as family films.

SELECT * FROM sakila.film
where film_id in (SELECT film_id FROM sakila.film_category
where category_id = (SELECT category_id FROM sakila.category
where name = 'Family'));

-- Get name and email from customers from Canada using subqueries. Do the same with joins.
 -- Note that to create a join, you will have to identify the correct tables with their primary keys and foreign keys, that will help you get the relevant information.
 
 SELECT * FROM sakila.customer
where address_id in (SELECT city_id FROM sakila.address
where city_id in (SELECT city_id FROM sakila.city
where country_id in (SELECT country_id FROM sakila.country
where country = 'Canada')));


SELECT * FROM sakila.country country
join sakila.city city
on country.country_id = city.country_id
join sakila.address address
on address.city_id = city.city_id
join sakila.customer  customer
on address.address_id = customer.address_id
where country = 'Canada';









-- Which are films starred by the most prolific actor? Most prolific actor is defined as the actor that has acted in the most number of films.
-- First you will have to find the most prolific actor and then use that actor_id to find the different films that he/she starred.


SELECT  count(film_id) total_movies, actor_id FROM sakila.film_actor
group by 2
order by total_movies desc
limit 1;

select title
from sakila.film
where film_id in (SELECT film_id
FROM sakila.film_actor
where actor_id = (SELECT actor_id
FROM sakila.film_actor
group by 1
order by count(film_id) desc
limit 1));

-- Films rented by most profitable customer. You can use the customer table and payment table to find the most profitable customer ie the customer that has made the largest sum of payments

select title
from sakila.film
where film_id in (SELECT distinct film_id
 FROM sakila.inventory
 where inventory_id in (SELECT inventory_id 
FROM sakila.rental
where customer_id = (SELECT customer_id
FROM sakila.payment
group by 1
order by sum(amount) desc
limit 1)));


-- Get the client_id and the total_amount_spent of those clients who spent more than the average of the total_amount spent by each client.



SELECT customer_id, sum(amount) as total_spent
FROM sakila.payment
group by 1
having total_spent > (select avg(amount) from sakila.payment);
